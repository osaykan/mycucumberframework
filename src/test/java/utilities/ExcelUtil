package utilities;


import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.apache.commons.io.filefilter.WildcardFileFilter;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.junit.Assert;

public class ExcelUtil {

	File dir;
	FileFilter fileFilter;
	File[] files;
	public Workbook workbook;
	public Sheet sheet;

	public void Excelcronjob_report_reading(String path, String name)
			throws IOException, InterruptedException, InvalidFormatException, IOException, InvalidFormatException {

		dir = new File(path);
		fileFilter = new WildcardFileFilter(name);
		System.out.println("Wildcard File Filter: " + fileFilter);
		files = dir.listFiles(fileFilter);
		Thread.sleep(2000);
		System.out.println("Cronjobname: " + name);
		System.out.println("Files Size: " + files.length);
		if (files.length == 1) {

			for (File file : files) {
				System.out.println("File: " + file);
				Path path1 = Paths.get(file.toURI());
				System.out.println("Line Count :" + Files.lines(path1).count());
				Assert.assertTrue(Files.lines(path1).count() >= 2);
				Thread.sleep(2000);

				Thread.sleep(1000);
				file.delete();
			}
		} else {
			System.out.println("###  Files nicht gefunden oder nicht heruntergeladen ####");
			Assert.assertTrue(files.length == 1);

		}

	}

}
